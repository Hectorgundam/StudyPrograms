
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.time.LocalDate;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author death
 */
public class AddRentalDetailsForm extends javax.swing.JFrame {

    private RentalManagementForm parent;

    private int movieId;
    private int customerId;
    private int reservationId;
    private String format;
    
    private ReservationListForm parentList;
    
    /**
     * Creates new form ConfirmRentalForm
     */
    
    public AddRentalDetailsForm(int movieId, int customerId, String format, int reservationId, RentalManagementForm parent, ReservationListForm parentList) {
        
        this.movieId = movieId;
        this.customerId = customerId;
        this.format = format;
        this.reservationId = reservationId;
        this.parent = parent;
        this.parentList = parentList;
        
        initComponents();

        loadRentalDetails();
        
    }
    
    // Overloaded constructor for reservations
    public AddRentalDetailsForm(int movieId, int customerId, String format, RentalManagementForm parent) {
        
        this(movieId, customerId, format, -1, parent, null);
        
    }
    
    // Overloaded constructor for rentals
    public AddRentalDetailsForm(int movieId, int customerId, RentalManagementForm parent) {
        
        this.movieId = movieId;
        this.customerId = customerId; 
        this.format = null; 
        this.reservationId = -1; 
        this.parent = parent; 
        this.parentList = null;
        
        initComponents(); 
        
        loadRentalDetails(); 
        
    }
    
    
    
    
    // START - Load Rental Details 
    private void loadRentalDetails(){
        
        try (Connection conn = DBConnection.connect()) {
            
            // Getting the details for the movies 
            String movieSql = "SELECT title, price_per_day FROM Movies WHERE id = ?";
            PreparedStatement movieStmt = conn.prepareStatement(movieSql); 
            movieStmt.setInt(1, movieId);
            ResultSet movieRs = movieStmt.executeQuery(); 
            
            if (movieRs.next()) {
                
                txtMovieTitle.setText(movieRs.getString("title")); 
                txtPricePerDay.setText(movieRs.getString("price_per_day"));
                
            }
            
            String userSql = "SELECT first_name, last_name FROM Users WHERE id = ?"; 
            PreparedStatement userStmt = conn.prepareStatement(userSql); 
            userStmt.setInt(1, customerId);
            ResultSet userRs = userStmt.executeQuery(); 
            
            
            if (userRs.next()) {
                
                String name = userRs.getString("first_name") + " " + userRs.getString("last_name"); 
                txtCustomerName.setText(name);
                
            }
            
            LocalDate rentDate = LocalDate.now(); 
            LocalDate returnDate = rentDate.plusDays(3);
            
            txtRentDate.setText(rentDate.toString());
            txtReturnDate.setText(returnDate.toString());
            txtDaysRented.setText("3");
            
            double price = Double.parseDouble(txtPricePerDay.getText()); 
            txtTotalCost.setText(String.valueOf(price * 3)); 
           
            // Setting days rented to 3 for now 
            // Need to account for ones where clients end up keeping the rental for longer 
            // Worrying about that later 
            
        } catch (Exception e) {
            
            e.printStackTrace(); 
            JOptionPane.showMessageDialog(this, "Error loading rental details.");
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnConfirmRental = new javax.swing.JButton();
        btnCancelRental = new javax.swing.JButton();
        txtMovieTitle = new javax.swing.JTextField();
        txtCustomerName = new javax.swing.JTextField();
        txtRentDate = new javax.swing.JTextField();
        txtReturnDate = new javax.swing.JTextField();
        txtPricePerDay = new javax.swing.JTextField();
        txtDaysRented = new javax.swing.JTextField();
        txtTotalCost = new javax.swing.JTextField();
        comboMovieFormat = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Confirm Rental Details");

        jLabel2.setText("Movie Title:");

        jLabel3.setText("Format:");

        jLabel4.setText("Customer Name:");

        jLabel5.setText("Rent Date:");

        jLabel6.setText("Return Date:");

        jLabel7.setText("Price Per Day:");

        jLabel8.setText("Days Rented:");

        jLabel9.setText("Total Cost:");

        btnConfirmRental.setText("Confirm Rental");
        btnConfirmRental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmRentalActionPerformed(evt);
            }
        });

        btnCancelRental.setText("Cancel Rental");
        btnCancelRental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelRentalActionPerformed(evt);
            }
        });

        comboMovieFormat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DVD", "BLU-RAY" }));
        comboMovieFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMovieFormatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConfirmRental)
                        .addGap(45, 45, 45)
                        .addComponent(btnCancelRental))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(2, 2, 2))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(txtMovieTitle)
                            .addComponent(txtCustomerName)
                            .addComponent(txtRentDate)
                            .addComponent(txtReturnDate)
                            .addComponent(txtPricePerDay)
                            .addComponent(txtDaysRented)
                            .addComponent(txtTotalCost)
                            .addComponent(comboMovieFormat, 0, 197, Short.MAX_VALUE))))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboMovieFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPricePerDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDaysRented, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmRental)
                    .addComponent(btnCancelRental))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelRentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelRentalActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_btnCancelRentalActionPerformed

    private void btnConfirmRentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmRentalActionPerformed
        // TODO add your handling code here:
        
        try (Connection conn = DBConnection.connect()) {
                        
            String selectedFormat = comboMovieFormat.getSelectedItem().toString(); 
            String unitCheck = selectedFormat.equalsIgnoreCase("DVD") ? "dvd_units" : "blu_ray_units";
            
            String checkSql = "SELECT " + unitCheck + " FROM Movies WHERE id =?"; 
            PreparedStatement checkStmt = conn.prepareStatement(checkSql); 
            checkStmt.setInt(1, movieId); 
            ResultSet rs = checkStmt.executeQuery(); 
            
            if (rs.next()) {
                
                int availableUnits = rs.getInt(1);
                
                if (availableUnits <= 0) {
                    
                    JOptionPane.showMessageDialog(this, "Sorry no units available to rent for " + selectedFormat + " format.");
                    return;
                    
                }
                
            }
                        
            String sql = "INSERT INTO Rentals (movie_id, customer_id, format, rent_date, return_date, price_per_day, total_cost)" + "VALUES (?, ?, ?, ?, ?, ?, ?)";
            
            PreparedStatement stmt = conn.prepareStatement(sql); 
            stmt.setInt(1, movieId);
            stmt.setInt(2, customerId);
            stmt.setString(3, selectedFormat);
            stmt.setString(4, txtRentDate.getText().trim());
            stmt.setString(5, txtReturnDate.getText().trim());
            stmt.setDouble(6, Double.parseDouble(txtPricePerDay.getText().trim()));
            stmt.setDouble(7, Double.parseDouble(txtTotalCost.getText().trim()));
            
            stmt.executeUpdate(); 
            
            String unitColumn = comboMovieFormat.getSelectedItem().toString().equalsIgnoreCase("DVD") ? "dvd_units" : "blu_ray_units"; 
            
            String updateInventorySql = "UPDATE Movies SET " + unitColumn + " = " + unitColumn + " - 1 WHERE id = ?"; 
            PreparedStatement inventoryStmt = conn.prepareStatement(updateInventorySql); 
            inventoryStmt.setInt(1, movieId);
            inventoryStmt.executeUpdate(); 
            
            JOptionPane.showMessageDialog(this, "Rental confirmed!");
            
            String deleteReservationSql = "DELETE FROM Reservations WHERE id = ?"; 
            PreparedStatement deleteStmt = conn.prepareStatement(deleteReservationSql); 
            deleteStmt.setInt(1, reservationId); 
            deleteStmt.executeUpdate(); 
            
            if (parentList != null) {
                
                parentList.loadReservations();
                
            }
            
            parent.loadRentals();
            this.dispose(); 
            
        } catch (Exception e) {
            
            e.printStackTrace(); 
            JOptionPane.showMessageDialog(this, "Error confirming rental details.");
            
        }
        
        
    }//GEN-LAST:event_btnConfirmRentalActionPerformed

    private void comboMovieFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMovieFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMovieFormatActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddRentalDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddRentalDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddRentalDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddRentalDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddRentalDetailsForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelRental;
    private javax.swing.JButton btnConfirmRental;
    private javax.swing.JComboBox<String> comboMovieFormat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtDaysRented;
    private javax.swing.JTextField txtMovieTitle;
    private javax.swing.JTextField txtPricePerDay;
    private javax.swing.JTextField txtRentDate;
    private javax.swing.JTextField txtReturnDate;
    private javax.swing.JTextField txtTotalCost;
    // End of variables declaration//GEN-END:variables
}
