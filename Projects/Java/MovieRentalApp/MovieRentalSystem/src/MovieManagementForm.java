
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author death
 */
public class MovieManagementForm extends javax.swing.JFrame {

    /**
     * Creates new form MovieManagementForm
     */
    public MovieManagementForm() {
        
        setTitle("Mana Movie Rental System");
        
        initComponents();
        loadMovies();
    }
    
    // START - Loading movies 
    public void loadMovies(){
    
        try (Connection conn = DBConnection.connect()) {
            
            String sql = "SELECT id, title, director, writers, release_date, duration, rating, genre, cast, price_per_day, poster_path, dvd_units, blu_ray_units FROM Movies"; 
            PreparedStatement stmt = conn.prepareStatement(sql); 
            ResultSet rs = stmt.executeQuery(); 
            
            DefaultTableModel model = new DefaultTableModel(
            new String[] {"ID", "Title", "Director", "Writers", "Release Date", "Duration", "Rating", "Genre", "Cast", "Price", "Poster", "DVD Units", "Blu-Ray Units"}, 0);
            
            while (rs.next()){
                
                model.addRow(new Object[] {
                    rs.getInt("id"),
                    rs.getString("title"),
                    rs.getString("director"),
                    rs.getString("writers"),
                    rs.getString("release_date"),
                    rs.getString("duration"),
                    rs.getString("rating"),
                    rs.getString("genre"),
                    rs.getString("cast"),
                    rs.getDouble("price_per_day"),
                    rs.getString("poster_path"), 
                    rs.getString("dvd_units"), 
                    rs.getString("blu_ray_units")
                });
                
            }
            
            tableMovies.setModel(model);
            
        } catch (Exception e) {
                
            e.printStackTrace(); 
            JOptionPane.showMessageDialog(this, "Error loading movies.");
                
        }  
        
    }
    // END - Loading movies 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMovies = new javax.swing.JTable();
        btnAddMovie = new javax.swing.JButton();
        btnEditMovie = new javax.swing.JButton();
        btnDeleteMovie = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Movie Management Form");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tableMovies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableMovies);

        btnAddMovie.setText("Add");
        btnAddMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMovieActionPerformed(evt);
            }
        });

        btnEditMovie.setText("Edit");
        btnEditMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditMovieActionPerformed(evt);
            }
        });

        btnDeleteMovie.setText("Delete");
        btnDeleteMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMovieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1075, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddMovie)
                        .addGap(39, 39, 39)
                        .addComponent(btnEditMovie)
                        .addGap(39, 39, 39)
                        .addComponent(btnDeleteMovie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnAddMovie)
                    .addComponent(btnEditMovie)
                    .addComponent(btnDeleteMovie))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_btnBackActionPerformed

    // START - Add movie button
    private void btnAddMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMovieActionPerformed
        // TODO add your handling code here:
        
        new AddEditMovieForm(null, this).setVisible(true);
        
    }//GEN-LAST:event_btnAddMovieActionPerformed
    // END - Add movie button
    
    // START - Edit movie button
    private void btnEditMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditMovieActionPerformed
        // TODO add your handling code here:
        
        int row = tableMovies.getSelectedRow(); 
        
        if (row != -1) {
            
            int movieId = (int) tableMovies.getValueAt(row, 0); 
            new AddEditMovieForm(movieId, this).setVisible(true);
            
        } else {
            
            JOptionPane.showMessageDialog(this, "Please select a movie first.");
            
        }
        
        
    }//GEN-LAST:event_btnEditMovieActionPerformed
    // END - Edit movie button

    // START - Delete movie button
    private void btnDeleteMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMovieActionPerformed
        // TODO add your handling code here:
        
        int row = tableMovies.getSelectedRow(); 

        if (row == -1) {
            
            JOptionPane.showMessageDialog(this, "Please select a movie to delete first.");
            return;
            
        }

        int movieId = (int) tableMovies.getValueAt(row, 0); 
        String title = (String) tableMovies.getValueAt(row, 1); 

        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Confirm deletion of " + title + ".", 
            "Confirm deletion",
            JOptionPane.YES_NO_OPTION     
        );

        if (confirm != JOptionPane.YES_OPTION) {
            return; 
        }

        try (Connection conn = DBConnection.connect()) {
            
            String checkSql = "SELECT COUNT(*) FROM Rentals WHERE movie_id = ? AND return_date IS NULL";
            PreparedStatement checkStmt = conn.prepareStatement(checkSql);
            checkStmt.setInt(1, movieId); 
            ResultSet rs = checkStmt.executeQuery();
            
            if (rs.next() && rs.getInt(1) > 0) {
                
                JOptionPane.showMessageDialog(this, "Cannot delete " + title + ". Active rental is present."); 
                return;
                
            }
            
            String deleteSql = "DELETE FROM Movies WHERE id = ?"; 
            PreparedStatement deleteStmt = conn.prepareStatement(deleteSql); 
            deleteStmt.setInt(1, movieId); 
            deleteStmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Movie successfully deleted."); 
            loadMovies();

        } catch (Exception e) {
            
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error deleting movie.");
            
        }
        
    }//GEN-LAST:event_btnDeleteMovieActionPerformed
    // END - Delete movie button
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieManagementForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMovie;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteMovie;
    private javax.swing.JButton btnEditMovie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMovies;
    // End of variables declaration//GEN-END:variables
}
